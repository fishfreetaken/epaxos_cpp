// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: conf.proto

#include "conf.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace epxos_instance_proto {
        template <typename>
PROTOBUF_CONSTEXPR EpNodeId::EpNodeId(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EpNodeIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpNodeIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpNodeIdDefaultTypeInternal() {}
  union {
    EpNodeId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpNodeIdDefaultTypeInternal _EpNodeId_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EnNodeInfo::EnNodeInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ip_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.iid_)*/ nullptr,
      /*decltype(_impl_.port_)*/ 0,
    } {}
struct EnNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnNodeInfoDefaultTypeInternal() {}
  union {
    EnNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnNodeInfoDefaultTypeInternal _EnNodeInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocalInstanceId::LocalInstanceId(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.iid_)*/ ::uint64_t{0u},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocalInstanceIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalInstanceIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalInstanceIdDefaultTypeInternal() {}
  union {
    LocalInstanceId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalInstanceIdDefaultTypeInternal _LocalInstanceId_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpGlobalConf::EpGlobalConf(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.node_list_)*/ {},
      /*decltype(_impl_.fast_gp_list_)*/ {},
      /*decltype(_impl_.local_nodeid_)*/ nullptr,
    } {}
struct EpGlobalConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpGlobalConfDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpGlobalConfDefaultTypeInternal() {}
  union {
    EpGlobalConf _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpGlobalConfDefaultTypeInternal _EpGlobalConf_default_instance_;
}  // namespace epxos_instance_proto
static ::_pb::Metadata file_level_metadata_conf_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_conf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_conf_2eproto = nullptr;
const ::uint32_t TableStruct_conf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpNodeId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpNodeId, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EnNodeInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EnNodeInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EnNodeInfo, _impl_.iid_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EnNodeInfo, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EnNodeInfo, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EnNodeInfo, _impl_.name_),
    1,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::LocalInstanceId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::LocalInstanceId, _impl_.iid_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpGlobalConf, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpGlobalConf, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpGlobalConf, _impl_.local_nodeid_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpGlobalConf, _impl_.node_list_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpGlobalConf, _impl_.fast_gp_list_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::epxos_instance_proto::EpNodeId)},
        {9, 21, -1, sizeof(::epxos_instance_proto::EnNodeInfo)},
        {25, -1, -1, sizeof(::epxos_instance_proto::LocalInstanceId)},
        {34, 45, -1, sizeof(::epxos_instance_proto::EpGlobalConf)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::epxos_instance_proto::_EpNodeId_default_instance_._instance,
    &::epxos_instance_proto::_EnNodeInfo_default_instance_._instance,
    &::epxos_instance_proto::_LocalInstanceId_default_instance_._instance,
    &::epxos_instance_proto::_EpGlobalConf_default_instance_._instance,
};
const char descriptor_table_protodef_conf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nconf.proto\022\024epxos_instance_proto\"\026\n\010Ep"
    "NodeId\022\n\n\002id\030\001 \001(\r\"o\n\nEnNodeInfo\022+\n\003iID\030"
    "\001 \001(\0132\036.epxos_instance_proto.EpNodeId\022\n\n"
    "\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\022\021\n\004name\030\004 \001(\tH\000\210"
    "\001\001B\007\n\005_name\"\036\n\017LocalInstanceId\022\013\n\003iID\030\001 "
    "\001(\004\"\257\001\n\014EpGlobalConf\0224\n\014local_nodeid\030\001 \001"
    "(\0132\036.epxos_instance_proto.EpNodeId\0223\n\tno"
    "de_list\030\002 \003(\0132 .epxos_instance_proto.EnN"
    "odeInfo\0224\n\014fast_gp_list\030\003 \003(\0132\036.epxos_in"
    "stance_proto.EpNodeIdb\006proto3"
};
static ::absl::once_flag descriptor_table_conf_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_conf_2eproto = {
    false,
    false,
    389,
    descriptor_table_protodef_conf_2eproto,
    "conf.proto",
    &descriptor_table_conf_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_conf_2eproto::offsets,
    file_level_metadata_conf_2eproto,
    file_level_enum_descriptors_conf_2eproto,
    file_level_service_descriptors_conf_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_conf_2eproto_getter() {
  return &descriptor_table_conf_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_conf_2eproto(&descriptor_table_conf_2eproto);
namespace epxos_instance_proto {
// ===================================================================

class EpNodeId::_Internal {
 public:
};

EpNodeId::EpNodeId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpNodeId)
}
EpNodeId::EpNodeId(const EpNodeId& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpNodeId)
}
inline void EpNodeId::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EpNodeId::~EpNodeId() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpNodeId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpNodeId::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void EpNodeId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpNodeId::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpNodeId)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpNodeId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EpNodeId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EpNodeId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpNodeId, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EpNodeId, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(EpNodeId, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EpNodeId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpNodeId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpNodeId)
  return target;
}

::size_t EpNodeId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpNodeId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpNodeId::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpNodeId::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpNodeId::GetClassData() const { return &_class_data_; }


void EpNodeId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpNodeId*>(&to_msg);
  auto& from = static_cast<const EpNodeId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpNodeId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpNodeId::CopyFrom(const EpNodeId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpNodeId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpNodeId::IsInitialized() const {
  return true;
}

void EpNodeId::InternalSwap(EpNodeId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata EpNodeId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_conf_2eproto_getter, &descriptor_table_conf_2eproto_once,
      file_level_metadata_conf_2eproto[0]);
}
// ===================================================================

class EnNodeInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<EnNodeInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpNodeId& iid(const EnNodeInfo* msg);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpNodeId& EnNodeInfo::_Internal::iid(const EnNodeInfo* msg) {
  return *msg->_impl_.iid_;
}
EnNodeInfo::EnNodeInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EnNodeInfo)
}
EnNodeInfo::EnNodeInfo(const EnNodeInfo& from) : ::google::protobuf::Message() {
  EnNodeInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ip_){},
      decltype(_impl_.name_){},
      decltype(_impl_.iid_){nullptr},
      decltype(_impl_.port_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    _this->_impl_.ip_.Set(from._internal_ip(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.iid_ = new ::epxos_instance_proto::EpNodeId(*from._impl_.iid_);
  }
  _this->_impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EnNodeInfo)
}
inline void EnNodeInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ip_){},
      decltype(_impl_.name_){},
      decltype(_impl_.iid_){nullptr},
      decltype(_impl_.port_){0},
  };
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
EnNodeInfo::~EnNodeInfo() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EnNodeInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EnNodeInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.iid_;
}
void EnNodeInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EnNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EnNodeInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.iid_ != nullptr);
      _impl_.iid_->Clear();
    }
  }
  _impl_.port_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EnNodeInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 46, 2> EnNodeInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EnNodeInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.name_)}},
    // .epxos_instance_proto.EpNodeId iID = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.iid_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.ip_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EnNodeInfo, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .epxos_instance_proto.EpNodeId iID = 1;
    {PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.iid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional string name = 4;
    {PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpNodeId>()},
  }}, {{
    "\37\0\2\0\4\0\0\0"
    "epxos_instance_proto.EnNodeInfo"
    "ip"
    "name"
  }},
};

::uint8_t* EnNodeInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EnNodeInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpNodeId iID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::iid(this),
        _Internal::iid(this).GetCachedSize(), target, stream);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "epxos_instance_proto.EnNodeInfo.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_port(), target);
  }

  // optional string name = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "epxos_instance_proto.EnNodeInfo.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EnNodeInfo)
  return target;
}

::size_t EnNodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EnNodeInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // .epxos_instance_proto.EpNodeId iID = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.iid_);
    }

  }
  // int32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EnNodeInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EnNodeInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*EnNodeInfo::GetClassData() const { return &_class_data_; }


void EnNodeInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EnNodeInfo*>(&to_msg);
  auto& from = static_cast<const EnNodeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EnNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_iid()->::epxos_instance_proto::EpNodeId::MergeFrom(
          from._internal_iid());
    }
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnNodeInfo::CopyFrom(const EnNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EnNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EnNodeInfo::IsInitialized() const {
  return true;
}

void EnNodeInfo::InternalSwap(EnNodeInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, lhs_arena,
                                       &other->_impl_.ip_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.port_)
      + sizeof(EnNodeInfo::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(EnNodeInfo, _impl_.iid_)>(
          reinterpret_cast<char*>(&_impl_.iid_),
          reinterpret_cast<char*>(&other->_impl_.iid_));
}

::google::protobuf::Metadata EnNodeInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_conf_2eproto_getter, &descriptor_table_conf_2eproto_once,
      file_level_metadata_conf_2eproto[1]);
}
// ===================================================================

class LocalInstanceId::_Internal {
 public:
};

LocalInstanceId::LocalInstanceId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.LocalInstanceId)
}
LocalInstanceId::LocalInstanceId(const LocalInstanceId& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.LocalInstanceId)
}
inline void LocalInstanceId::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.iid_){::uint64_t{0u}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
LocalInstanceId::~LocalInstanceId() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.LocalInstanceId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocalInstanceId::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void LocalInstanceId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocalInstanceId::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.LocalInstanceId)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.iid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocalInstanceId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LocalInstanceId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocalInstanceId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 iID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LocalInstanceId, _impl_.iid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LocalInstanceId, _impl_.iid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 iID = 1;
    {PROTOBUF_FIELD_OFFSET(LocalInstanceId, _impl_.iid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LocalInstanceId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.LocalInstanceId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 iID = 1;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.LocalInstanceId)
  return target;
}

::size_t LocalInstanceId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.LocalInstanceId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 iID = 1;
  if (this->_internal_iid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_iid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocalInstanceId::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocalInstanceId::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocalInstanceId::GetClassData() const { return &_class_data_; }


void LocalInstanceId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocalInstanceId*>(&to_msg);
  auto& from = static_cast<const LocalInstanceId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.LocalInstanceId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iid() != 0) {
    _this->_internal_set_iid(from._internal_iid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalInstanceId::CopyFrom(const LocalInstanceId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.LocalInstanceId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocalInstanceId::IsInitialized() const {
  return true;
}

void LocalInstanceId::InternalSwap(LocalInstanceId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.iid_, other->_impl_.iid_);
}

::google::protobuf::Metadata LocalInstanceId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_conf_2eproto_getter, &descriptor_table_conf_2eproto_once,
      file_level_metadata_conf_2eproto[2]);
}
// ===================================================================

class EpGlobalConf::_Internal {
 public:
  using HasBits = decltype(std::declval<EpGlobalConf>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpNodeId& local_nodeid(const EpGlobalConf* msg);
  static void set_has_local_nodeid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpNodeId& EpGlobalConf::_Internal::local_nodeid(const EpGlobalConf* msg) {
  return *msg->_impl_.local_nodeid_;
}
EpGlobalConf::EpGlobalConf(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpGlobalConf)
}
EpGlobalConf::EpGlobalConf(const EpGlobalConf& from) : ::google::protobuf::Message() {
  EpGlobalConf* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.node_list_){from._impl_.node_list_},
      decltype(_impl_.fast_gp_list_){from._impl_.fast_gp_list_},
      decltype(_impl_.local_nodeid_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.local_nodeid_ = new ::epxos_instance_proto::EpNodeId(*from._impl_.local_nodeid_);
  }

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpGlobalConf)
}
inline void EpGlobalConf::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.node_list_){arena},
      decltype(_impl_.fast_gp_list_){arena},
      decltype(_impl_.local_nodeid_){nullptr},
  };
}
EpGlobalConf::~EpGlobalConf() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpGlobalConf)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpGlobalConf::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.node_list_.~RepeatedPtrField();
  _impl_.fast_gp_list_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.local_nodeid_;
}
void EpGlobalConf::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpGlobalConf::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpGlobalConf)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_node_list()->Clear();
  _internal_mutable_fast_gp_list()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.local_nodeid_ != nullptr);
    _impl_.local_nodeid_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpGlobalConf::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> EpGlobalConf::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpGlobalConf_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .epxos_instance_proto.EpNodeId local_nodeid = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_.local_nodeid_)}},
    // repeated .epxos_instance_proto.EnNodeInfo node_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_.node_list_)}},
    // repeated .epxos_instance_proto.EpNodeId fast_gp_list = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_.fast_gp_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .epxos_instance_proto.EpNodeId local_nodeid = 1;
    {PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_.local_nodeid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .epxos_instance_proto.EnNodeInfo node_list = 2;
    {PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_.node_list_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .epxos_instance_proto.EpNodeId fast_gp_list = 3;
    {PROTOBUF_FIELD_OFFSET(EpGlobalConf, _impl_.fast_gp_list_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpNodeId>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EnNodeInfo>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpNodeId>()},
  }}, {{
  }},
};

::uint8_t* EpGlobalConf::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpGlobalConf)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpNodeId local_nodeid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::local_nodeid(this),
        _Internal::local_nodeid(this).GetCachedSize(), target, stream);
  }

  // repeated .epxos_instance_proto.EnNodeInfo node_list = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_node_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_node_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .epxos_instance_proto.EpNodeId fast_gp_list = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fast_gp_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_fast_gp_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpGlobalConf)
  return target;
}

::size_t EpGlobalConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpGlobalConf)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .epxos_instance_proto.EnNodeInfo node_list = 2;
  total_size += 1UL * this->_internal_node_list_size();
  for (const auto& msg : this->_internal_node_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .epxos_instance_proto.EpNodeId fast_gp_list = 3;
  total_size += 1UL * this->_internal_fast_gp_list_size();
  for (const auto& msg : this->_internal_fast_gp_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .epxos_instance_proto.EpNodeId local_nodeid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.local_nodeid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpGlobalConf::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpGlobalConf::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpGlobalConf::GetClassData() const { return &_class_data_; }


void EpGlobalConf::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpGlobalConf*>(&to_msg);
  auto& from = static_cast<const EpGlobalConf&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpGlobalConf)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_list()->MergeFrom(
      from._internal_node_list());
  _this->_internal_mutable_fast_gp_list()->MergeFrom(
      from._internal_fast_gp_list());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_local_nodeid()->::epxos_instance_proto::EpNodeId::MergeFrom(
        from._internal_local_nodeid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpGlobalConf::CopyFrom(const EpGlobalConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpGlobalConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpGlobalConf::IsInitialized() const {
  return true;
}

void EpGlobalConf::InternalSwap(EpGlobalConf* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_list_.InternalSwap(&other->_impl_.node_list_);
  _impl_.fast_gp_list_.InternalSwap(&other->_impl_.fast_gp_list_);
  swap(_impl_.local_nodeid_, other->_impl_.local_nodeid_);
}

::google::protobuf::Metadata EpGlobalConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_conf_2eproto_getter, &descriptor_table_conf_2eproto_once,
      file_level_metadata_conf_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace epxos_instance_proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
