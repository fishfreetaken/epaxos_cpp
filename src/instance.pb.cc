// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: instance.proto

#include "instance.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace epxos_instance_proto {
        template <typename>
PROTOBUF_CONSTEXPR EpIns::EpIns(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.nodeid_)*/ nullptr,
      /*decltype(_impl_.insid_)*/ ::uint64_t{0u},
    } {}
struct EpInsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpInsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpInsDefaultTypeInternal() {}
  union {
    EpIns _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpInsDefaultTypeInternal _EpIns_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpInstID::EpInstID(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.iid_)*/ nullptr,
      /*decltype(_impl_.seqid_)*/ ::uint64_t{0u},
    } {}
struct EpInstIDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpInstIDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpInstIDDefaultTypeInternal() {}
  union {
    EpInstID _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpInstIDDefaultTypeInternal _EpInstID_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpDepsIds::EpDepsIds(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.arrdps_)*/ {},
      /*decltype(_impl_.version_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EpDepsIdsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpDepsIdsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpDepsIdsDefaultTypeInternal() {}
  union {
    EpDepsIds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpDepsIdsDefaultTypeInternal _EpDepsIds_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpKeyValueItem::EpKeyValueItem(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.key_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct EpKeyValueItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpKeyValueItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpKeyValueItemDefaultTypeInternal() {}
  union {
    EpKeyValueItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpKeyValueItemDefaultTypeInternal _EpKeyValueItem_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpInstance::EpInstance(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.kvs_)*/ {},
      /*decltype(_impl_.iid_)*/ nullptr,
      /*decltype(_impl_.arryids_)*/ nullptr,
      /*decltype(_impl_.sate_)*/ 0,
      /*decltype(_impl_.ballot_num_)*/ 0u,
      /*decltype(_impl_.ack_num_)*/ 0u,
    } {}
struct EpInstanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpInstanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpInstanceDefaultTypeInternal() {}
  union {
    EpInstance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpInstanceDefaultTypeInternal _EpInstance_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpValueItem::EpValueItem(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.iid_)*/ nullptr,
    } {}
struct EpValueItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpValueItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpValueItemDefaultTypeInternal() {}
  union {
    EpValueItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpValueItemDefaultTypeInternal _EpValueItem_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpValueStorageBody::EpValueStorageBody(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ nullptr,
    } {}
struct EpValueStorageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpValueStorageBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpValueStorageBodyDefaultTypeInternal() {}
  union {
    EpValueStorageBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpValueStorageBodyDefaultTypeInternal _EpValueStorageBody_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR InstanceSwapMsg::InstanceSwapMsg(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.insc_)*/ nullptr,
      /*decltype(_impl_.to_node_)*/ nullptr,
      /*decltype(_impl_.from_node_)*/ nullptr,
    } {}
struct InstanceSwapMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstanceSwapMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstanceSwapMsgDefaultTypeInternal() {}
  union {
    InstanceSwapMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstanceSwapMsgDefaultTypeInternal _InstanceSwapMsg_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpaxosInsWriteReq::EpaxosInsWriteReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.list_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EpaxosInsWriteReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpaxosInsWriteReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpaxosInsWriteReqDefaultTypeInternal() {}
  union {
    EpaxosInsWriteReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpaxosInsWriteReqDefaultTypeInternal _EpaxosInsWriteReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpaxosInsWriteRsp::EpaxosInsWriteRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ins_rsp_)*/ nullptr,
      /*decltype(_impl_.res_code_)*/ 0,
    } {}
struct EpaxosInsWriteRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpaxosInsWriteRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpaxosInsWriteRspDefaultTypeInternal() {}
  union {
    EpaxosInsWriteRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpaxosInsWriteRspDefaultTypeInternal _EpaxosInsWriteRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpaxosInsReadReq::EpaxosInsReadReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.keys_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EpaxosInsReadReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpaxosInsReadReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpaxosInsReadReqDefaultTypeInternal() {}
  union {
    EpaxosInsReadReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpaxosInsReadReqDefaultTypeInternal _EpaxosInsReadReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EpaxosInsReadRsp::EpaxosInsReadRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.kvs_)*/ {},
      /*decltype(_impl_.ins_rsp_)*/ nullptr,
      /*decltype(_impl_.res_code_)*/ 0,
    } {}
struct EpaxosInsReadRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpaxosInsReadRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpaxosInsReadRspDefaultTypeInternal() {}
  union {
    EpaxosInsReadRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpaxosInsReadRspDefaultTypeInternal _EpaxosInsReadRsp_default_instance_;
}  // namespace epxos_instance_proto
static ::_pb::Metadata file_level_metadata_instance_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_instance_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_instance_2eproto = nullptr;
const ::uint32_t TableStruct_instance_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpIns, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpIns, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpIns, _impl_.insid_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpIns, _impl_.nodeid_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstID, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstID, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstID, _impl_.seqid_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstID, _impl_.iid_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpDepsIds, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpDepsIds, _impl_.arrdps_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpDepsIds, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpKeyValueItem, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpKeyValueItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpKeyValueItem, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpKeyValueItem, _impl_.value_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_.iid_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_.sate_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_.ballot_num_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_.arryids_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_.ack_num_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpInstance, _impl_.kvs_),
    0,
    ~0u,
    ~0u,
    1,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueItem, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueItem, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueItem, _impl_.iid_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueStorageBody, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueStorageBody, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpValueStorageBody, _impl_.items_),
    0,
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::InstanceSwapMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::InstanceSwapMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::InstanceSwapMsg, _impl_.insc_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::InstanceSwapMsg, _impl_.to_node_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::InstanceSwapMsg, _impl_.from_node_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsWriteReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsWriteReq, _impl_.list_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsWriteRsp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsWriteRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsWriteRsp, _impl_.res_code_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsWriteRsp, _impl_.ins_rsp_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadReq, _impl_.keys_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadRsp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadRsp, _impl_.res_code_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadRsp, _impl_.ins_rsp_),
    PROTOBUF_FIELD_OFFSET(::epxos_instance_proto::EpaxosInsReadRsp, _impl_.kvs_),
    ~0u,
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::epxos_instance_proto::EpIns)},
        {12, 22, -1, sizeof(::epxos_instance_proto::EpInstID)},
        {24, -1, -1, sizeof(::epxos_instance_proto::EpDepsIds)},
        {34, 44, -1, sizeof(::epxos_instance_proto::EpKeyValueItem)},
        {46, 60, -1, sizeof(::epxos_instance_proto::EpInstance)},
        {66, 76, -1, sizeof(::epxos_instance_proto::EpValueItem)},
        {78, 87, -1, sizeof(::epxos_instance_proto::EpValueStorageBody)},
        {88, 99, -1, sizeof(::epxos_instance_proto::InstanceSwapMsg)},
        {102, -1, -1, sizeof(::epxos_instance_proto::EpaxosInsWriteReq)},
        {111, 121, -1, sizeof(::epxos_instance_proto::EpaxosInsWriteRsp)},
        {123, -1, -1, sizeof(::epxos_instance_proto::EpaxosInsReadReq)},
        {132, 143, -1, sizeof(::epxos_instance_proto::EpaxosInsReadRsp)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::epxos_instance_proto::_EpIns_default_instance_._instance,
    &::epxos_instance_proto::_EpInstID_default_instance_._instance,
    &::epxos_instance_proto::_EpDepsIds_default_instance_._instance,
    &::epxos_instance_proto::_EpKeyValueItem_default_instance_._instance,
    &::epxos_instance_proto::_EpInstance_default_instance_._instance,
    &::epxos_instance_proto::_EpValueItem_default_instance_._instance,
    &::epxos_instance_proto::_EpValueStorageBody_default_instance_._instance,
    &::epxos_instance_proto::_InstanceSwapMsg_default_instance_._instance,
    &::epxos_instance_proto::_EpaxosInsWriteReq_default_instance_._instance,
    &::epxos_instance_proto::_EpaxosInsWriteRsp_default_instance_._instance,
    &::epxos_instance_proto::_EpaxosInsReadReq_default_instance_._instance,
    &::epxos_instance_proto::_EpaxosInsReadRsp_default_instance_._instance,
};
const char descriptor_table_protodef_instance_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016instance.proto\022\024epxos_instance_proto\032\n"
    "conf.proto\"F\n\005EpIns\022\r\n\005insid\030\002 \001(\004\022.\n\006no"
    "deid\030\003 \001(\0132\036.epxos_instance_proto.EpNode"
    "Id\"C\n\010EpInstID\022\r\n\005seqid\030\001 \001(\004\022(\n\003iID\030\002 \001"
    "(\0132\033.epxos_instance_proto.EpIns\"L\n\tEpDep"
    "sIds\022.\n\006arrdps\030\001 \003(\0132\036.epxos_instance_pr"
    "oto.EpInstID\022\017\n\007version\030\002 \001(\r\";\n\016EpKeyVa"
    "lueItem\022\013\n\003key\030\001 \001(\t\022\022\n\005value\030\002 \001(\tH\000\210\001\001"
    "B\010\n\006_value\"\205\002\n\nEpInstance\022+\n\003iID\030\001 \001(\0132\036"
    ".epxos_instance_proto.EpInstID\022/\n\004sate\030\002"
    " \001(\0162!.epxos_instance_proto.EpWorkState\022"
    "\022\n\nballot_num\030\003 \001(\r\0225\n\007arryids\030\004 \001(\0132\037.e"
    "pxos_instance_proto.EpDepsIdsH\000\210\001\001\022\017\n\007ac"
    "k_num\030\005 \001(\r\0221\n\003kvs\030\006 \003(\0132$.epxos_instanc"
    "e_proto.EpKeyValueItemB\n\n\010_arryids\"X\n\013Ep"
    "ValueItem\022\022\n\005value\030\001 \001(\tH\000\210\001\001\022+\n\003iID\030\002 \001"
    "(\0132\036.epxos_instance_proto.EpInstIDB\010\n\006_v"
    "alue\"U\n\022EpValueStorageBody\0225\n\005items\030\001 \001("
    "\0132!.epxos_instance_proto.EpValueItemH\000\210\001"
    "\001B\010\n\006_items\"\245\001\n\017InstanceSwapMsg\022.\n\004insc\030"
    "\001 \001(\0132 .epxos_instance_proto.EpInstance\022"
    "/\n\007to_node\030\002 \001(\0132\036.epxos_instance_proto."
    "EpNodeId\0221\n\tfrom_node\030\003 \001(\0132\036.epxos_inst"
    "ance_proto.EpNodeId\"G\n\021EpaxosInsWriteReq"
    "\0222\n\004list\030\001 \003(\0132$.epxos_instance_proto.Ep"
    "KeyValueItem\"S\n\021EpaxosInsWriteRsp\022\020\n\010res"
    "_code\030\001 \001(\005\022,\n\007ins_rsp\030\002 \001(\0132\033.epxos_ins"
    "tance_proto.EpIns\" \n\020EpaxosInsReadReq\022\014\n"
    "\004keys\030\001 \003(\t\"\205\001\n\020EpaxosInsReadRsp\022\020\n\010res_"
    "code\030\001 \001(\005\022,\n\007ins_rsp\030\002 \001(\0132\033.epxos_inst"
    "ance_proto.EpIns\0221\n\003kvs\030\003 \003(\0132$.epxos_in"
    "stance_proto.EpKeyValueItem*\236\001\n\013EpWorkSt"
    "ate\022\025\n\021EPXOS_EM_WK_EMPTY\020\000\022\027\n\023EPXOS_EM_W"
    "K_PROPOSE\020\001\022\031\n\025EPXOS_EM_WK_PREACCEPT\020\002\022\026"
    "\n\022EPXOS_EM_WK_ACCEPT\020\003\022\026\n\022EPXOS_EM_WK_CO"
    "MMIT\020\004\022\024\n\020EPXOS_EM_WK_EXEC\020\005b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_instance_2eproto_deps[1] =
    {
        &::descriptor_table_conf_2eproto,
};
static ::absl::once_flag descriptor_table_instance_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_instance_2eproto = {
    false,
    false,
    1436,
    descriptor_table_protodef_instance_2eproto,
    "instance.proto",
    &descriptor_table_instance_2eproto_once,
    descriptor_table_instance_2eproto_deps,
    1,
    12,
    schemas,
    file_default_instances,
    TableStruct_instance_2eproto::offsets,
    file_level_metadata_instance_2eproto,
    file_level_enum_descriptors_instance_2eproto,
    file_level_service_descriptors_instance_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_instance_2eproto_getter() {
  return &descriptor_table_instance_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_instance_2eproto(&descriptor_table_instance_2eproto);
namespace epxos_instance_proto {
const ::google::protobuf::EnumDescriptor* EpWorkState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_instance_2eproto);
  return file_level_enum_descriptors_instance_2eproto[0];
}
bool EpWorkState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class EpIns::_Internal {
 public:
  using HasBits = decltype(std::declval<EpIns>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpIns, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpNodeId& nodeid(const EpIns* msg);
  static void set_has_nodeid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpNodeId& EpIns::_Internal::nodeid(const EpIns* msg) {
  return *msg->_impl_.nodeid_;
}
void EpIns::clear_nodeid() {
  if (_impl_.nodeid_ != nullptr) _impl_.nodeid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EpIns::EpIns(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpIns)
}
EpIns::EpIns(const EpIns& from) : ::google::protobuf::Message() {
  EpIns* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.nodeid_){nullptr},
      decltype(_impl_.insid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.nodeid_ = new ::epxos_instance_proto::EpNodeId(*from._impl_.nodeid_);
  }
  _this->_impl_.insid_ = from._impl_.insid_;

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpIns)
}
inline void EpIns::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.nodeid_){nullptr},
      decltype(_impl_.insid_){::uint64_t{0u}},
  };
}
EpIns::~EpIns() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpIns)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpIns::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.nodeid_;
}
void EpIns::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpIns::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpIns)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nodeid_ != nullptr);
    _impl_.nodeid_->Clear();
  }
  _impl_.insid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpIns::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> EpIns::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpIns, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpIns_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 insid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EpIns, _impl_.insid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EpIns, _impl_.insid_)}},
    // .epxos_instance_proto.EpNodeId nodeid = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(EpIns, _impl_.nodeid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 insid = 2;
    {PROTOBUF_FIELD_OFFSET(EpIns, _impl_.insid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .epxos_instance_proto.EpNodeId nodeid = 3;
    {PROTOBUF_FIELD_OFFSET(EpIns, _impl_.nodeid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpNodeId>()},
  }}, {{
  }},
};

::uint8_t* EpIns::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpIns)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 insid = 2;
  if (this->_internal_insid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_insid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpNodeId nodeid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::nodeid(this),
        _Internal::nodeid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpIns)
  return target;
}

::size_t EpIns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpIns)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .epxos_instance_proto.EpNodeId nodeid = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.nodeid_);
  }

  // uint64 insid = 2;
  if (this->_internal_insid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_insid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpIns::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpIns::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpIns::GetClassData() const { return &_class_data_; }


void EpIns::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpIns*>(&to_msg);
  auto& from = static_cast<const EpIns&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpIns)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_nodeid()->::epxos_instance_proto::EpNodeId::MergeFrom(
        from._internal_nodeid());
  }
  if (from._internal_insid() != 0) {
    _this->_internal_set_insid(from._internal_insid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpIns::CopyFrom(const EpIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpIns::IsInitialized() const {
  return true;
}

void EpIns::InternalSwap(EpIns* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EpIns, _impl_.insid_)
      + sizeof(EpIns::_impl_.insid_)
      - PROTOBUF_FIELD_OFFSET(EpIns, _impl_.nodeid_)>(
          reinterpret_cast<char*>(&_impl_.nodeid_),
          reinterpret_cast<char*>(&other->_impl_.nodeid_));
}

::google::protobuf::Metadata EpIns::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[0]);
}
// ===================================================================

class EpInstID::_Internal {
 public:
  using HasBits = decltype(std::declval<EpInstID>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpInstID, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpIns& iid(const EpInstID* msg);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpIns& EpInstID::_Internal::iid(const EpInstID* msg) {
  return *msg->_impl_.iid_;
}
EpInstID::EpInstID(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpInstID)
}
EpInstID::EpInstID(const EpInstID& from) : ::google::protobuf::Message() {
  EpInstID* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.iid_){nullptr},
      decltype(_impl_.seqid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.iid_ = new ::epxos_instance_proto::EpIns(*from._impl_.iid_);
  }
  _this->_impl_.seqid_ = from._impl_.seqid_;

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpInstID)
}
inline void EpInstID::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.iid_){nullptr},
      decltype(_impl_.seqid_){::uint64_t{0u}},
  };
}
EpInstID::~EpInstID() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpInstID)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpInstID::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.iid_;
}
void EpInstID::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpInstID::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpInstID)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.iid_ != nullptr);
    _impl_.iid_->Clear();
  }
  _impl_.seqid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpInstID::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> EpInstID::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpInstID, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpInstID_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .epxos_instance_proto.EpIns iID = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EpInstID, _impl_.iid_)}},
    // uint64 seqid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EpInstID, _impl_.seqid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EpInstID, _impl_.seqid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 seqid = 1;
    {PROTOBUF_FIELD_OFFSET(EpInstID, _impl_.seqid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .epxos_instance_proto.EpIns iID = 2;
    {PROTOBUF_FIELD_OFFSET(EpInstID, _impl_.iid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpIns>()},
  }}, {{
  }},
};

::uint8_t* EpInstID::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpInstID)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 seqid = 1;
  if (this->_internal_seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_seqid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpIns iID = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::iid(this),
        _Internal::iid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpInstID)
  return target;
}

::size_t EpInstID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpInstID)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .epxos_instance_proto.EpIns iID = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.iid_);
  }

  // uint64 seqid = 1;
  if (this->_internal_seqid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_seqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpInstID::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpInstID::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpInstID::GetClassData() const { return &_class_data_; }


void EpInstID::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpInstID*>(&to_msg);
  auto& from = static_cast<const EpInstID&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpInstID)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_iid()->::epxos_instance_proto::EpIns::MergeFrom(
        from._internal_iid());
  }
  if (from._internal_seqid() != 0) {
    _this->_internal_set_seqid(from._internal_seqid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpInstID::CopyFrom(const EpInstID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpInstID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpInstID::IsInitialized() const {
  return true;
}

void EpInstID::InternalSwap(EpInstID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EpInstID, _impl_.seqid_)
      + sizeof(EpInstID::_impl_.seqid_)
      - PROTOBUF_FIELD_OFFSET(EpInstID, _impl_.iid_)>(
          reinterpret_cast<char*>(&_impl_.iid_),
          reinterpret_cast<char*>(&other->_impl_.iid_));
}

::google::protobuf::Metadata EpInstID::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[1]);
}
// ===================================================================

class EpDepsIds::_Internal {
 public:
};

EpDepsIds::EpDepsIds(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpDepsIds)
}
EpDepsIds::EpDepsIds(const EpDepsIds& from) : ::google::protobuf::Message() {
  EpDepsIds* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arrdps_){from._impl_.arrdps_},
      decltype(_impl_.version_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpDepsIds)
}
inline void EpDepsIds::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.arrdps_){arena},
      decltype(_impl_.version_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EpDepsIds::~EpDepsIds() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpDepsIds)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpDepsIds::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arrdps_.~RepeatedPtrField();
}
void EpDepsIds::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpDepsIds::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpDepsIds)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_arrdps()->Clear();
  _impl_.version_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpDepsIds::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> EpDepsIds::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpDepsIds_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpDepsIds, _impl_.version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EpDepsIds, _impl_.version_)}},
    // repeated .epxos_instance_proto.EpInstID arrdps = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EpDepsIds, _impl_.arrdps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .epxos_instance_proto.EpInstID arrdps = 1;
    {PROTOBUF_FIELD_OFFSET(EpDepsIds, _impl_.arrdps_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 version = 2;
    {PROTOBUF_FIELD_OFFSET(EpDepsIds, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpInstID>()},
  }}, {{
  }},
};

::uint8_t* EpDepsIds::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpDepsIds)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .epxos_instance_proto.EpInstID arrdps = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arrdps_size()); i < n; i++) {
    const auto& repfield = this->_internal_arrdps().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint32 version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpDepsIds)
  return target;
}

::size_t EpDepsIds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpDepsIds)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .epxos_instance_proto.EpInstID arrdps = 1;
  total_size += 1UL * this->_internal_arrdps_size();
  for (const auto& msg : this->_internal_arrdps()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 version = 2;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpDepsIds::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpDepsIds::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpDepsIds::GetClassData() const { return &_class_data_; }


void EpDepsIds::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpDepsIds*>(&to_msg);
  auto& from = static_cast<const EpDepsIds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpDepsIds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_arrdps()->MergeFrom(
      from._internal_arrdps());
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpDepsIds::CopyFrom(const EpDepsIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpDepsIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpDepsIds::IsInitialized() const {
  return true;
}

void EpDepsIds::InternalSwap(EpDepsIds* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arrdps_.InternalSwap(&other->_impl_.arrdps_);
        swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata EpDepsIds::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[2]);
}
// ===================================================================

class EpKeyValueItem::_Internal {
 public:
  using HasBits = decltype(std::declval<EpKeyValueItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpKeyValueItem, _impl_._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

EpKeyValueItem::EpKeyValueItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpKeyValueItem)
}
EpKeyValueItem::EpKeyValueItem(const EpKeyValueItem& from) : ::google::protobuf::Message() {
  EpKeyValueItem* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.key_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpKeyValueItem)
}
inline void EpKeyValueItem::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.key_){},
      decltype(_impl_.value_){},
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
EpKeyValueItem::~EpKeyValueItem() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpKeyValueItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpKeyValueItem::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
}
void EpKeyValueItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpKeyValueItem::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpKeyValueItem)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.value_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpKeyValueItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> EpKeyValueItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpKeyValueItem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EpKeyValueItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EpKeyValueItem, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EpKeyValueItem, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EpKeyValueItem, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(EpKeyValueItem, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\3\5\0\0\0\0\0"
    "epxos_instance_proto.EpKeyValueItem"
    "key"
    "value"
  }},
};

::uint8_t* EpKeyValueItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpKeyValueItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "epxos_instance_proto.EpKeyValueItem.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string value = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "epxos_instance_proto.EpKeyValueItem.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpKeyValueItem)
  return target;
}

::size_t EpKeyValueItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpKeyValueItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // optional string value = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpKeyValueItem::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpKeyValueItem::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpKeyValueItem::GetClassData() const { return &_class_data_; }


void EpKeyValueItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpKeyValueItem*>(&to_msg);
  auto& from = static_cast<const EpKeyValueItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpKeyValueItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpKeyValueItem::CopyFrom(const EpKeyValueItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpKeyValueItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpKeyValueItem::IsInitialized() const {
  return true;
}

void EpKeyValueItem::InternalSwap(EpKeyValueItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata EpKeyValueItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[3]);
}
// ===================================================================

class EpInstance::_Internal {
 public:
  using HasBits = decltype(std::declval<EpInstance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpInstance, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpInstID& iid(const EpInstance* msg);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::epxos_instance_proto::EpDepsIds& arryids(const EpInstance* msg);
  static void set_has_arryids(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::epxos_instance_proto::EpInstID& EpInstance::_Internal::iid(const EpInstance* msg) {
  return *msg->_impl_.iid_;
}
const ::epxos_instance_proto::EpDepsIds& EpInstance::_Internal::arryids(const EpInstance* msg) {
  return *msg->_impl_.arryids_;
}
EpInstance::EpInstance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpInstance)
}
EpInstance::EpInstance(const EpInstance& from) : ::google::protobuf::Message() {
  EpInstance* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.kvs_){from._impl_.kvs_},
      decltype(_impl_.iid_){nullptr},
      decltype(_impl_.arryids_){nullptr},
      decltype(_impl_.sate_){},
      decltype(_impl_.ballot_num_){},
      decltype(_impl_.ack_num_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.iid_ = new ::epxos_instance_proto::EpInstID(*from._impl_.iid_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.arryids_ = new ::epxos_instance_proto::EpDepsIds(*from._impl_.arryids_);
  }
  ::memcpy(&_impl_.sate_, &from._impl_.sate_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.ack_num_) -
    reinterpret_cast<char*>(&_impl_.sate_)) + sizeof(_impl_.ack_num_));

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpInstance)
}
inline void EpInstance::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.kvs_){arena},
      decltype(_impl_.iid_){nullptr},
      decltype(_impl_.arryids_){nullptr},
      decltype(_impl_.sate_){0},
      decltype(_impl_.ballot_num_){0u},
      decltype(_impl_.ack_num_){0u},
  };
}
EpInstance::~EpInstance() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpInstance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpInstance::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.kvs_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.iid_;
  if (this != internal_default_instance()) delete _impl_.arryids_;
}
void EpInstance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpInstance)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_kvs()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.iid_ != nullptr);
      _impl_.iid_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.arryids_ != nullptr);
      _impl_.arryids_->Clear();
    }
  }
  ::memset(&_impl_.sate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ack_num_) -
      reinterpret_cast<char*>(&_impl_.sate_)) + sizeof(_impl_.ack_num_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpInstance::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> EpInstance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpInstance, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpInstance_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .epxos_instance_proto.EpInstID iID = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.iid_)}},
    // .epxos_instance_proto.EpWorkState sate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpInstance, _impl_.sate_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.sate_)}},
    // uint32 ballot_num = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpInstance, _impl_.ballot_num_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.ballot_num_)}},
    // optional .epxos_instance_proto.EpDepsIds arryids = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.arryids_)}},
    // uint32 ack_num = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpInstance, _impl_.ack_num_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.ack_num_)}},
    // repeated .epxos_instance_proto.EpKeyValueItem kvs = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.kvs_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .epxos_instance_proto.EpInstID iID = 1;
    {PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.iid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .epxos_instance_proto.EpWorkState sate = 2;
    {PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.sate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 ballot_num = 3;
    {PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.ballot_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // optional .epxos_instance_proto.EpDepsIds arryids = 4;
    {PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.arryids_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 ack_num = 5;
    {PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.ack_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .epxos_instance_proto.EpKeyValueItem kvs = 6;
    {PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.kvs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpInstID>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpDepsIds>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpKeyValueItem>()},
  }}, {{
  }},
};

::uint8_t* EpInstance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpInstance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpInstID iID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::iid(this),
        _Internal::iid(this).GetCachedSize(), target, stream);
  }

  // .epxos_instance_proto.EpWorkState sate = 2;
  if (this->_internal_sate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_sate(), target);
  }

  // uint32 ballot_num = 3;
  if (this->_internal_ballot_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_ballot_num(), target);
  }

  // optional .epxos_instance_proto.EpDepsIds arryids = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::arryids(this),
        _Internal::arryids(this).GetCachedSize(), target, stream);
  }

  // uint32 ack_num = 5;
  if (this->_internal_ack_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_ack_num(), target);
  }

  // repeated .epxos_instance_proto.EpKeyValueItem kvs = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_kvs_size()); i < n; i++) {
    const auto& repfield = this->_internal_kvs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpInstance)
  return target;
}

::size_t EpInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpInstance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .epxos_instance_proto.EpKeyValueItem kvs = 6;
  total_size += 1UL * this->_internal_kvs_size();
  for (const auto& msg : this->_internal_kvs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .epxos_instance_proto.EpInstID iID = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.iid_);
    }

    // optional .epxos_instance_proto.EpDepsIds arryids = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.arryids_);
    }

  }
  // .epxos_instance_proto.EpWorkState sate = 2;
  if (this->_internal_sate() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_sate());
  }

  // uint32 ballot_num = 3;
  if (this->_internal_ballot_num() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ballot_num());
  }

  // uint32 ack_num = 5;
  if (this->_internal_ack_num() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ack_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpInstance::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpInstance::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpInstance::GetClassData() const { return &_class_data_; }


void EpInstance::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpInstance*>(&to_msg);
  auto& from = static_cast<const EpInstance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpInstance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_kvs()->MergeFrom(
      from._internal_kvs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_iid()->::epxos_instance_proto::EpInstID::MergeFrom(
          from._internal_iid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_arryids()->::epxos_instance_proto::EpDepsIds::MergeFrom(
          from._internal_arryids());
    }
  }
  if (from._internal_sate() != 0) {
    _this->_internal_set_sate(from._internal_sate());
  }
  if (from._internal_ballot_num() != 0) {
    _this->_internal_set_ballot_num(from._internal_ballot_num());
  }
  if (from._internal_ack_num() != 0) {
    _this->_internal_set_ack_num(from._internal_ack_num());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpInstance::CopyFrom(const EpInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpInstance::IsInitialized() const {
  return true;
}

void EpInstance::InternalSwap(EpInstance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.kvs_.InternalSwap(&other->_impl_.kvs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.ack_num_)
      + sizeof(EpInstance::_impl_.ack_num_)
      - PROTOBUF_FIELD_OFFSET(EpInstance, _impl_.iid_)>(
          reinterpret_cast<char*>(&_impl_.iid_),
          reinterpret_cast<char*>(&other->_impl_.iid_));
}

::google::protobuf::Metadata EpInstance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[4]);
}
// ===================================================================

class EpValueItem::_Internal {
 public:
  using HasBits = decltype(std::declval<EpValueItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpValueItem, _impl_._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::epxos_instance_proto::EpInstID& iid(const EpValueItem* msg);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::epxos_instance_proto::EpInstID& EpValueItem::_Internal::iid(const EpValueItem* msg) {
  return *msg->_impl_.iid_;
}
EpValueItem::EpValueItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpValueItem)
}
EpValueItem::EpValueItem(const EpValueItem& from) : ::google::protobuf::Message() {
  EpValueItem* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.value_){},
      decltype(_impl_.iid_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.iid_ = new ::epxos_instance_proto::EpInstID(*from._impl_.iid_);
  }

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpValueItem)
}
inline void EpValueItem::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.value_){},
      decltype(_impl_.iid_){nullptr},
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
EpValueItem::~EpValueItem() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpValueItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpValueItem::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
  if (this != internal_default_instance()) delete _impl_.iid_;
}
void EpValueItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpValueItem::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpValueItem)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.iid_ != nullptr);
      _impl_.iid_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpValueItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 46, 2> EpValueItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpValueItem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpValueItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .epxos_instance_proto.EpInstID iID = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EpValueItem, _impl_.iid_)}},
    // optional string value = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EpValueItem, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string value = 1;
    {PROTOBUF_FIELD_OFFSET(EpValueItem, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .epxos_instance_proto.EpInstID iID = 2;
    {PROTOBUF_FIELD_OFFSET(EpValueItem, _impl_.iid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpInstID>()},
  }}, {{
    "\40\5\0\0\0\0\0\0"
    "epxos_instance_proto.EpValueItem"
    "value"
  }},
};

::uint8_t* EpValueItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpValueItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "epxos_instance_proto.EpValueItem.value");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .epxos_instance_proto.EpInstID iID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::iid(this),
        _Internal::iid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpValueItem)
  return target;
}

::size_t EpValueItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpValueItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_value());
    }

    // .epxos_instance_proto.EpInstID iID = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.iid_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpValueItem::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpValueItem::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpValueItem::GetClassData() const { return &_class_data_; }


void EpValueItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpValueItem*>(&to_msg);
  auto& from = static_cast<const EpValueItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpValueItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_iid()->::epxos_instance_proto::EpInstID::MergeFrom(
          from._internal_iid());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpValueItem::CopyFrom(const EpValueItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpValueItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpValueItem::IsInitialized() const {
  return true;
}

void EpValueItem::InternalSwap(EpValueItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
  swap(_impl_.iid_, other->_impl_.iid_);
}

::google::protobuf::Metadata EpValueItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[5]);
}
// ===================================================================

class EpValueStorageBody::_Internal {
 public:
  using HasBits = decltype(std::declval<EpValueStorageBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpValueStorageBody, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpValueItem& items(const EpValueStorageBody* msg);
  static void set_has_items(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpValueItem& EpValueStorageBody::_Internal::items(const EpValueStorageBody* msg) {
  return *msg->_impl_.items_;
}
EpValueStorageBody::EpValueStorageBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpValueStorageBody)
}
EpValueStorageBody::EpValueStorageBody(const EpValueStorageBody& from) : ::google::protobuf::Message() {
  EpValueStorageBody* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.items_ = new ::epxos_instance_proto::EpValueItem(*from._impl_.items_);
  }

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpValueStorageBody)
}
inline void EpValueStorageBody::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){nullptr},
  };
}
EpValueStorageBody::~EpValueStorageBody() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpValueStorageBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpValueStorageBody::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.items_;
}
void EpValueStorageBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpValueStorageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpValueStorageBody)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.items_ != nullptr);
    _impl_.items_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpValueStorageBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> EpValueStorageBody::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpValueStorageBody, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpValueStorageBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .epxos_instance_proto.EpValueItem items = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EpValueStorageBody, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .epxos_instance_proto.EpValueItem items = 1;
    {PROTOBUF_FIELD_OFFSET(EpValueStorageBody, _impl_.items_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpValueItem>()},
  }}, {{
  }},
};

::uint8_t* EpValueStorageBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpValueStorageBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .epxos_instance_proto.EpValueItem items = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::items(this),
        _Internal::items(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpValueStorageBody)
  return target;
}

::size_t EpValueStorageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpValueStorageBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .epxos_instance_proto.EpValueItem items = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.items_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpValueStorageBody::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpValueStorageBody::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpValueStorageBody::GetClassData() const { return &_class_data_; }


void EpValueStorageBody::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpValueStorageBody*>(&to_msg);
  auto& from = static_cast<const EpValueStorageBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpValueStorageBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_items()->::epxos_instance_proto::EpValueItem::MergeFrom(
        from._internal_items());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpValueStorageBody::CopyFrom(const EpValueStorageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpValueStorageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpValueStorageBody::IsInitialized() const {
  return true;
}

void EpValueStorageBody::InternalSwap(EpValueStorageBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.items_, other->_impl_.items_);
}

::google::protobuf::Metadata EpValueStorageBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[6]);
}
// ===================================================================

class InstanceSwapMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<InstanceSwapMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpInstance& insc(const InstanceSwapMsg* msg);
  static void set_has_insc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::epxos_instance_proto::EpNodeId& to_node(const InstanceSwapMsg* msg);
  static void set_has_to_node(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::epxos_instance_proto::EpNodeId& from_node(const InstanceSwapMsg* msg);
  static void set_has_from_node(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::epxos_instance_proto::EpInstance& InstanceSwapMsg::_Internal::insc(const InstanceSwapMsg* msg) {
  return *msg->_impl_.insc_;
}
const ::epxos_instance_proto::EpNodeId& InstanceSwapMsg::_Internal::to_node(const InstanceSwapMsg* msg) {
  return *msg->_impl_.to_node_;
}
const ::epxos_instance_proto::EpNodeId& InstanceSwapMsg::_Internal::from_node(const InstanceSwapMsg* msg) {
  return *msg->_impl_.from_node_;
}
void InstanceSwapMsg::clear_to_node() {
  if (_impl_.to_node_ != nullptr) _impl_.to_node_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void InstanceSwapMsg::clear_from_node() {
  if (_impl_.from_node_ != nullptr) _impl_.from_node_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
InstanceSwapMsg::InstanceSwapMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.InstanceSwapMsg)
}
InstanceSwapMsg::InstanceSwapMsg(const InstanceSwapMsg& from) : ::google::protobuf::Message() {
  InstanceSwapMsg* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.insc_){nullptr},
      decltype(_impl_.to_node_){nullptr},
      decltype(_impl_.from_node_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.insc_ = new ::epxos_instance_proto::EpInstance(*from._impl_.insc_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.to_node_ = new ::epxos_instance_proto::EpNodeId(*from._impl_.to_node_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.from_node_ = new ::epxos_instance_proto::EpNodeId(*from._impl_.from_node_);
  }

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.InstanceSwapMsg)
}
inline void InstanceSwapMsg::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.insc_){nullptr},
      decltype(_impl_.to_node_){nullptr},
      decltype(_impl_.from_node_){nullptr},
  };
}
InstanceSwapMsg::~InstanceSwapMsg() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.InstanceSwapMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstanceSwapMsg::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.insc_;
  if (this != internal_default_instance()) delete _impl_.to_node_;
  if (this != internal_default_instance()) delete _impl_.from_node_;
}
void InstanceSwapMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InstanceSwapMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.InstanceSwapMsg)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.insc_ != nullptr);
      _impl_.insc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_node_ != nullptr);
      _impl_.to_node_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.from_node_ != nullptr);
      _impl_.from_node_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstanceSwapMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> InstanceSwapMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InstanceSwapMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .epxos_instance_proto.EpInstance insc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.insc_)}},
    // .epxos_instance_proto.EpNodeId to_node = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.to_node_)}},
    // .epxos_instance_proto.EpNodeId from_node = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.from_node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .epxos_instance_proto.EpInstance insc = 1;
    {PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.insc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .epxos_instance_proto.EpNodeId to_node = 2;
    {PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.to_node_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .epxos_instance_proto.EpNodeId from_node = 3;
    {PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.from_node_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpInstance>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpNodeId>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpNodeId>()},
  }}, {{
  }},
};

::uint8_t* InstanceSwapMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.InstanceSwapMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpInstance insc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::insc(this),
        _Internal::insc(this).GetCachedSize(), target, stream);
  }

  // .epxos_instance_proto.EpNodeId to_node = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to_node(this),
        _Internal::to_node(this).GetCachedSize(), target, stream);
  }

  // .epxos_instance_proto.EpNodeId from_node = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::from_node(this),
        _Internal::from_node(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.InstanceSwapMsg)
  return target;
}

::size_t InstanceSwapMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.InstanceSwapMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .epxos_instance_proto.EpInstance insc = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.insc_);
    }

    // .epxos_instance_proto.EpNodeId to_node = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.to_node_);
    }

    // .epxos_instance_proto.EpNodeId from_node = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.from_node_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstanceSwapMsg::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InstanceSwapMsg::MergeImpl
};
const ::google::protobuf::Message::ClassData*InstanceSwapMsg::GetClassData() const { return &_class_data_; }


void InstanceSwapMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstanceSwapMsg*>(&to_msg);
  auto& from = static_cast<const InstanceSwapMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.InstanceSwapMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_insc()->::epxos_instance_proto::EpInstance::MergeFrom(
          from._internal_insc());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_to_node()->::epxos_instance_proto::EpNodeId::MergeFrom(
          from._internal_to_node());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_from_node()->::epxos_instance_proto::EpNodeId::MergeFrom(
          from._internal_from_node());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstanceSwapMsg::CopyFrom(const InstanceSwapMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.InstanceSwapMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstanceSwapMsg::IsInitialized() const {
  return true;
}

void InstanceSwapMsg::InternalSwap(InstanceSwapMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.from_node_)
      + sizeof(InstanceSwapMsg::_impl_.from_node_)
      - PROTOBUF_FIELD_OFFSET(InstanceSwapMsg, _impl_.insc_)>(
          reinterpret_cast<char*>(&_impl_.insc_),
          reinterpret_cast<char*>(&other->_impl_.insc_));
}

::google::protobuf::Metadata InstanceSwapMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[7]);
}
// ===================================================================

class EpaxosInsWriteReq::_Internal {
 public:
};

EpaxosInsWriteReq::EpaxosInsWriteReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpaxosInsWriteReq)
}
EpaxosInsWriteReq::EpaxosInsWriteReq(const EpaxosInsWriteReq& from) : ::google::protobuf::Message() {
  EpaxosInsWriteReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.list_){from._impl_.list_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpaxosInsWriteReq)
}
inline void EpaxosInsWriteReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.list_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EpaxosInsWriteReq::~EpaxosInsWriteReq() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpaxosInsWriteReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpaxosInsWriteReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_.~RepeatedPtrField();
}
void EpaxosInsWriteReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpaxosInsWriteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpaxosInsWriteReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_list()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpaxosInsWriteReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> EpaxosInsWriteReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpaxosInsWriteReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .epxos_instance_proto.EpKeyValueItem list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EpaxosInsWriteReq, _impl_.list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .epxos_instance_proto.EpKeyValueItem list = 1;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsWriteReq, _impl_.list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpKeyValueItem>()},
  }}, {{
  }},
};

::uint8_t* EpaxosInsWriteReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpaxosInsWriteReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .epxos_instance_proto.EpKeyValueItem list = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpaxosInsWriteReq)
  return target;
}

::size_t EpaxosInsWriteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpaxosInsWriteReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .epxos_instance_proto.EpKeyValueItem list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->_internal_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpaxosInsWriteReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpaxosInsWriteReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpaxosInsWriteReq::GetClassData() const { return &_class_data_; }


void EpaxosInsWriteReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpaxosInsWriteReq*>(&to_msg);
  auto& from = static_cast<const EpaxosInsWriteReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpaxosInsWriteReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_list()->MergeFrom(
      from._internal_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpaxosInsWriteReq::CopyFrom(const EpaxosInsWriteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpaxosInsWriteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpaxosInsWriteReq::IsInitialized() const {
  return true;
}

void EpaxosInsWriteReq::InternalSwap(EpaxosInsWriteReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
}

::google::protobuf::Metadata EpaxosInsWriteReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[8]);
}
// ===================================================================

class EpaxosInsWriteRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<EpaxosInsWriteRsp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpIns& ins_rsp(const EpaxosInsWriteRsp* msg);
  static void set_has_ins_rsp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpIns& EpaxosInsWriteRsp::_Internal::ins_rsp(const EpaxosInsWriteRsp* msg) {
  return *msg->_impl_.ins_rsp_;
}
EpaxosInsWriteRsp::EpaxosInsWriteRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpaxosInsWriteRsp)
}
EpaxosInsWriteRsp::EpaxosInsWriteRsp(const EpaxosInsWriteRsp& from) : ::google::protobuf::Message() {
  EpaxosInsWriteRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ins_rsp_){nullptr},
      decltype(_impl_.res_code_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ins_rsp_ = new ::epxos_instance_proto::EpIns(*from._impl_.ins_rsp_);
  }
  _this->_impl_.res_code_ = from._impl_.res_code_;

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpaxosInsWriteRsp)
}
inline void EpaxosInsWriteRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ins_rsp_){nullptr},
      decltype(_impl_.res_code_){0},
  };
}
EpaxosInsWriteRsp::~EpaxosInsWriteRsp() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpaxosInsWriteRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpaxosInsWriteRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.ins_rsp_;
}
void EpaxosInsWriteRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpaxosInsWriteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpaxosInsWriteRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ins_rsp_ != nullptr);
    _impl_.ins_rsp_->Clear();
  }
  _impl_.res_code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpaxosInsWriteRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> EpaxosInsWriteRsp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpaxosInsWriteRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .epxos_instance_proto.EpIns ins_rsp = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_.ins_rsp_)}},
    // int32 res_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpaxosInsWriteRsp, _impl_.res_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_.res_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 res_code = 1;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_.res_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .epxos_instance_proto.EpIns ins_rsp = 2;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_.ins_rsp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpIns>()},
  }}, {{
  }},
};

::uint8_t* EpaxosInsWriteRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpaxosInsWriteRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 res_code = 1;
  if (this->_internal_res_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_res_code(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpIns ins_rsp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ins_rsp(this),
        _Internal::ins_rsp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpaxosInsWriteRsp)
  return target;
}

::size_t EpaxosInsWriteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpaxosInsWriteRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .epxos_instance_proto.EpIns ins_rsp = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ins_rsp_);
  }

  // int32 res_code = 1;
  if (this->_internal_res_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_res_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpaxosInsWriteRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpaxosInsWriteRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpaxosInsWriteRsp::GetClassData() const { return &_class_data_; }


void EpaxosInsWriteRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpaxosInsWriteRsp*>(&to_msg);
  auto& from = static_cast<const EpaxosInsWriteRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpaxosInsWriteRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ins_rsp()->::epxos_instance_proto::EpIns::MergeFrom(
        from._internal_ins_rsp());
  }
  if (from._internal_res_code() != 0) {
    _this->_internal_set_res_code(from._internal_res_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpaxosInsWriteRsp::CopyFrom(const EpaxosInsWriteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpaxosInsWriteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpaxosInsWriteRsp::IsInitialized() const {
  return true;
}

void EpaxosInsWriteRsp::InternalSwap(EpaxosInsWriteRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_.res_code_)
      + sizeof(EpaxosInsWriteRsp::_impl_.res_code_)
      - PROTOBUF_FIELD_OFFSET(EpaxosInsWriteRsp, _impl_.ins_rsp_)>(
          reinterpret_cast<char*>(&_impl_.ins_rsp_),
          reinterpret_cast<char*>(&other->_impl_.ins_rsp_));
}

::google::protobuf::Metadata EpaxosInsWriteRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[9]);
}
// ===================================================================

class EpaxosInsReadReq::_Internal {
 public:
};

EpaxosInsReadReq::EpaxosInsReadReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpaxosInsReadReq)
}
EpaxosInsReadReq::EpaxosInsReadReq(const EpaxosInsReadReq& from) : ::google::protobuf::Message() {
  EpaxosInsReadReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){from._impl_.keys_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpaxosInsReadReq)
}
inline void EpaxosInsReadReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EpaxosInsReadReq::~EpaxosInsReadReq() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpaxosInsReadReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpaxosInsReadReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_keys()->~RepeatedPtrField();
}
void EpaxosInsReadReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpaxosInsReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpaxosInsReadReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpaxosInsReadReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> EpaxosInsReadReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EpaxosInsReadReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string keys = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EpaxosInsReadReq, _impl_.keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string keys = 1;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsReadReq, _impl_.keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\45\4\0\0\0\0\0\0"
    "epxos_instance_proto.EpaxosInsReadReq"
    "keys"
  }},
};

::uint8_t* EpaxosInsReadReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpaxosInsReadReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->_internal_keys_size(); i < n; ++i) {
    const auto& s = this->_internal_keys().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "epxos_instance_proto.EpaxosInsReadReq.keys");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpaxosInsReadReq)
  return target;
}

::size_t EpaxosInsReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpaxosInsReadReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_keys().size());
  for (int i = 0, n = _internal_keys().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_keys().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpaxosInsReadReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpaxosInsReadReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpaxosInsReadReq::GetClassData() const { return &_class_data_; }


void EpaxosInsReadReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpaxosInsReadReq*>(&to_msg);
  auto& from = static_cast<const EpaxosInsReadReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpaxosInsReadReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpaxosInsReadReq::CopyFrom(const EpaxosInsReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpaxosInsReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpaxosInsReadReq::IsInitialized() const {
  return true;
}

void EpaxosInsReadReq::InternalSwap(EpaxosInsReadReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
}

::google::protobuf::Metadata EpaxosInsReadReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[10]);
}
// ===================================================================

class EpaxosInsReadRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<EpaxosInsReadRsp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_._has_bits_);
  static const ::epxos_instance_proto::EpIns& ins_rsp(const EpaxosInsReadRsp* msg);
  static void set_has_ins_rsp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::epxos_instance_proto::EpIns& EpaxosInsReadRsp::_Internal::ins_rsp(const EpaxosInsReadRsp* msg) {
  return *msg->_impl_.ins_rsp_;
}
EpaxosInsReadRsp::EpaxosInsReadRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:epxos_instance_proto.EpaxosInsReadRsp)
}
EpaxosInsReadRsp::EpaxosInsReadRsp(const EpaxosInsReadRsp& from) : ::google::protobuf::Message() {
  EpaxosInsReadRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.kvs_){from._impl_.kvs_},
      decltype(_impl_.ins_rsp_){nullptr},
      decltype(_impl_.res_code_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ins_rsp_ = new ::epxos_instance_proto::EpIns(*from._impl_.ins_rsp_);
  }
  _this->_impl_.res_code_ = from._impl_.res_code_;

  // @@protoc_insertion_point(copy_constructor:epxos_instance_proto.EpaxosInsReadRsp)
}
inline void EpaxosInsReadRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.kvs_){arena},
      decltype(_impl_.ins_rsp_){nullptr},
      decltype(_impl_.res_code_){0},
  };
}
EpaxosInsReadRsp::~EpaxosInsReadRsp() {
  // @@protoc_insertion_point(destructor:epxos_instance_proto.EpaxosInsReadRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EpaxosInsReadRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.kvs_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.ins_rsp_;
}
void EpaxosInsReadRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EpaxosInsReadRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:epxos_instance_proto.EpaxosInsReadRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_kvs()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ins_rsp_ != nullptr);
    _impl_.ins_rsp_->Clear();
  }
  _impl_.res_code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EpaxosInsReadRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> EpaxosInsReadRsp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EpaxosInsReadRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 res_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EpaxosInsReadRsp, _impl_.res_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.res_code_)}},
    // .epxos_instance_proto.EpIns ins_rsp = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.ins_rsp_)}},
    // repeated .epxos_instance_proto.EpKeyValueItem kvs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.kvs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 res_code = 1;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.res_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .epxos_instance_proto.EpIns ins_rsp = 2;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.ins_rsp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .epxos_instance_proto.EpKeyValueItem kvs = 3;
    {PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.kvs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpIns>()},
    {::_pbi::TcParser::GetTable<::epxos_instance_proto::EpKeyValueItem>()},
  }}, {{
  }},
};

::uint8_t* EpaxosInsReadRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:epxos_instance_proto.EpaxosInsReadRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 res_code = 1;
  if (this->_internal_res_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_res_code(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .epxos_instance_proto.EpIns ins_rsp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ins_rsp(this),
        _Internal::ins_rsp(this).GetCachedSize(), target, stream);
  }

  // repeated .epxos_instance_proto.EpKeyValueItem kvs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_kvs_size()); i < n; i++) {
    const auto& repfield = this->_internal_kvs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:epxos_instance_proto.EpaxosInsReadRsp)
  return target;
}

::size_t EpaxosInsReadRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:epxos_instance_proto.EpaxosInsReadRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .epxos_instance_proto.EpKeyValueItem kvs = 3;
  total_size += 1UL * this->_internal_kvs_size();
  for (const auto& msg : this->_internal_kvs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .epxos_instance_proto.EpIns ins_rsp = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ins_rsp_);
  }

  // int32 res_code = 1;
  if (this->_internal_res_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_res_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EpaxosInsReadRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EpaxosInsReadRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*EpaxosInsReadRsp::GetClassData() const { return &_class_data_; }


void EpaxosInsReadRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EpaxosInsReadRsp*>(&to_msg);
  auto& from = static_cast<const EpaxosInsReadRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:epxos_instance_proto.EpaxosInsReadRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_kvs()->MergeFrom(
      from._internal_kvs());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ins_rsp()->::epxos_instance_proto::EpIns::MergeFrom(
        from._internal_ins_rsp());
  }
  if (from._internal_res_code() != 0) {
    _this->_internal_set_res_code(from._internal_res_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpaxosInsReadRsp::CopyFrom(const EpaxosInsReadRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:epxos_instance_proto.EpaxosInsReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EpaxosInsReadRsp::IsInitialized() const {
  return true;
}

void EpaxosInsReadRsp::InternalSwap(EpaxosInsReadRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.kvs_.InternalSwap(&other->_impl_.kvs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.res_code_)
      + sizeof(EpaxosInsReadRsp::_impl_.res_code_)
      - PROTOBUF_FIELD_OFFSET(EpaxosInsReadRsp, _impl_.ins_rsp_)>(
          reinterpret_cast<char*>(&_impl_.ins_rsp_),
          reinterpret_cast<char*>(&other->_impl_.ins_rsp_));
}

::google::protobuf::Metadata EpaxosInsReadRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_instance_2eproto_getter, &descriptor_table_instance_2eproto_once,
      file_level_metadata_instance_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace epxos_instance_proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
